version: "3.8"

services:
  # Redis for inter-agent communication and caching
  redis:
    image: redis:7-alpine
    container_name: multi_agent_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agent_network

  # MongoDB for document storage
  mongodb:
    image: mongo:6.0
    container_name: multi_agent_mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - agent_network

  # Supervisor Agent
  supervisor:
    build:
      context: .
      dockerfile: ./agents/supervisor/Dockerfile
    container_name: supervisor_agent
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/agents_db?authSource=admin
      - LOG_LEVEL=INFO
      - AGENT_TYPE=supervisor
    depends_on:
      - redis
      - mongodb
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    networks:
      - agent_network
    restart: unless-stopped

  # Data Collection Agent
  data_collector:
    build:
      context: .
      dockerfile: ./agents/data_collector/Dockerfile
    container_name: data_collector_agent
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/agents_db?authSource=admin
      - LOG_LEVEL=INFO
      - AGENT_TYPE=data_collector
      - MAX_CONCURRENT_REQUESTS=5
      - RATE_LIMIT_PER_MINUTE=60
    depends_on:
      - redis
      - mongodb
      - supervisor
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
      - ./data:/app/data
    networks:
      - agent_network
    restart: unless-stopped

  # Analyzer Agent
  analyzer:
    build:
      context: .
      dockerfile: ./agents/analyzer/Dockerfile
    container_name: analyzer_agent
    ports:
      - "8002:8002"
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/agents_db?authSource=admin
      - LOG_LEVEL=INFO
      - AGENT_TYPE=analyzer
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - USE_LOCAL_LLM=false
      - OLLAMA_URL=http://localhost:11434
    depends_on:
      - redis
      - mongodb
      - supervisor
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
      - ./models:/app/models
    networks:
      - agent_network
    restart: unless-stopped

  # Web Dashboard (Optional)
  dashboard:
    build:
      context: .
      dockerfile: ./dashboard/Dockerfile
    container_name: agent_dashboard
    ports:
      - "3000:3000"
    environment:
      - SUPERVISOR_URL=http://supervisor:8000
      - REDIS_URL=redis://redis:6379
    depends_on:
      - supervisor
    volumes:
      - ./dashboard:/app
    networks:
      - agent_network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: agent_gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - supervisor
      - data_collector
      - analyzer
      - dashboard
    networks:
      - agent_network
    restart: unless-stopped

volumes:
  redis_data:
  mongodb_data:

networks:
  agent_network:
    driver: bridge
